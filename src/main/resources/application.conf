{
  akka {
    loglevel = "INFO"
  }

  aws {
    access-key = "**"
    secret-key = "**"
  }

  source {

    input = ${SOURCE}

    local {
      actual-source = "../../data/yellow_tripdata_2016-01.csv"
      // Data Prep sorts the inputs
      taxi-trips-sorted-data = "../../data/yellow_tripdata_2016-01.csv"
    }

    s3 {
      bucket-name = "nyc-sorted-trips-data"
      filePathPrefix = "yellow-taxis/"
      //      bucket-name = "nyc-tlc"
      //      filePathPrefix = "trip data/yellow_tripdata_2016-"
    }

    max-wait-for-next-trip = 60000 // 1 min in milli second - This is while reading trips from file
    play-speed = 1440 // 10 // 10 min in source play in 1 min
    min-trip-time = 10000 // 10 sec in milli second
  }

  // Following are parameters to control the supply of taxis on road.
  supply {
    taxis-on-road = 100000
    time-between-taxi-for-hire-requests = 5000 // send requests every 5 second
  }

  demand {
    customers-on-road = 300000
  }

  traffic {
    min-trip-time = 10000 // in millis - if trips are less than 10 sec, then we ignore it
  }

  kafka {
    bootstrap-servers = ${KAFKA}// "192.168.99.100:9092"  // comma separated list of broker:host
    supply-topic = "taxis_supply"
    demand-topic = "taxis_demand"
    trip-complete-topic = "taxis_trips"
  }

  spark {
    master = ${SPARK_MASTER} // "local[8]"
    checkpoint-dir = "spark-checkpoint-dir"
  }

  es {
    nodes = ${ES_NODE} // "localhost"
    port = ${ES_PORT} // "9200"
    cluster_name = ${ES_CLUSTER_NAME} // "elasticsearch"
    sd_ratio-type = "taxis_now/sd_ratio"
    traffic-type = "traffic_now/traffic"
  }

}